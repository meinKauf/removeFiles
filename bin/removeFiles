#!/usr/bin/env node
var fs = require('fs');
var util = require('util');
var optimist = require('optimist');
var argv = optimist
		.usage('Usage: $0 -t [num] [/path/to/search/for/files]')
		.alias('t', 'threshold')
		.describe('t', 'Threshold in days. Files older than this threshold will match')
		.demand('t')

		.alias('m', 'measurement')
		.describe('m', 'Defines what type of unit the threshold is. (seconds, minutes, hours, days, months, years)')
		.default('m', 'days')

		.alias('d', 'dry')
		.boolean('d')
		.describe('d', 'Dryrun. Just show what you would delete.')

		.alias('c', 'comparator')
		.default('c', 'mtime')
		.describe('c', 'What comparator should be used')

		.boolean('r')
		.alias('r', 'recursive')
		.describe('r', 'Recurse into subdirectories')

		.alias('f', 'force')
		.boolean('f')
		.describe('f', 'Do not ask questions.')

		.alias('v', 'verbose')
		.boolean('v')
		.describe('v', 'Be verbose')

		.argv;

var removeFiles = require('../').removeFiles;
var comparators = require('../').comparators;

var path = argv._.pop();
if (!path) {
	console.error("Missing required argument: path");
	process.exit(1);
}

if (!fs.existsSync(path)) {
	console.error("Path '" + path + "' does not exist. Exiting.");
	process.exit(1);
}

if (typeof comparators[argv.comparator] === "undefined") {
	console.error("Comparator '" + argv.comparator + "' does not exist. Exiting");
	process.exit(1);
}

var comparatorFunction = comparators[argv.comparator];
var options = {
	dryRun: argv.dry,
	threshold: argv.threshold,
	thresholdMeasurememt: argv.measurement,
	recurseInDirectories: argv.recursive,
	verbose: argv.verbose
};
var callback = function (error, meta) {
	var size = meta.size;
	var files = meta.files;
	var unit = "byte";
	if (size > 1073741824) {
		size = size / 1073741824;
		unit = "GB"
	} else if (size > 1048576) {
		size = size / 1048576;
		unit = "MB";
	} else if (size > 1024) {
		size = size / 1024;
		unit = "kB";
	}
	size = Math.round(size * 100) / 100;
	var dryRunString = argv.dry ? "(dryrun) " : "";
	console.log("\nUsed this settings:\n\tcomparator method:", argv.comparator);
	for(var key in options) {
  	console.log("\t" + key + ":", options[key]);
  }
	console.log();
	console.log(dryRunString + "Deleted " + files + " files with a total size of ~ " + size + unit + ".");
	process.exit(0);
};

console.log("Using this settings:\n\tcomparator:", argv.comparator);
for(var key in options) {
	console.log("\t" + key + ":", options[key]);
}
if (!argv.force) {
	console.log("\nContinue with deleting all files without further warnings by pressing <ENTER>!");
	process.stdin.setEncoding('utf-8');
	process.stdin.on('data', function (input) {
		removeFiles(path, comparatorFunction, options, callback);
	});
	process.stdin.resume();
} else {
	removeFiles(path, comparatorFunction, options, callback);
}

